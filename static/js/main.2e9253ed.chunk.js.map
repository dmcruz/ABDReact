{"version":3,"sources":["redux/user/user.reducer.js","redux/root-reducer.js","redux/store.js","components/ABDNavMenu.js","components/ABDLayout.js","components/antd-pickers/DatePicker.js","components/antd-pickers/TimePicker.js","components/antd-pickers/Calendar.js","pages/Home.js","redux/user/user.action.js","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","name","birthDate","islandName","userReducer","state","action","type","payload","combineReducers","user","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ABDNavMenu","linkIsland","this","props","to","mode","style","height","margin","Item","key","icon","HomeOutlined","Component","connect","Header","Layout","Footer","Content","ABDLayout","className","alt","src","padding","minHeight","children","displayName","DatePicker","generatePicker","dayjsGenerateConfig","TimePicker","generateCalendar","React","ref","picker","undefined","Home","onNameChange","bind","onBirthdateChange","onIslandNameChange","size","shape","label","value","onChange","onClick","onRegister","e","setName","target","dateString","setBirthDate","setIslandName","bdate","App","exact","path","component","Boolean","window","location","hostname","match","baseUrl","document","getElementsByTagName","getAttribute","ReactDOM","render","StrictMode","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2e9253ed.chunk.js","sourcesContent":["const INITIAL_STATE = {\n    name: '',\n    birthDate: null,\n    islandName: null\n}\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case 'SET_BDATE':\n            return {\n                ...state,\n                birthDate: action.payload\n            }\n        case 'SET_NAME':\n            return {\n                ...state,\n                name: action.payload\n            }\n        case 'SET_ISLAND_NAME':\n                return {\n                    ...state,\n                    islandName: action.payload\n                }\n        default:\n            return state;\n\n    }\n\n}\n\nexport default userReducer;","import { combineReducers } from 'redux';\n\nimport userReducer from './user/user.reducer';\n\nexport default combineReducers({\n    user: userReducer\n});","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\n\nimport rootReducer from './root-reducer';\n\nconst middlewares = [logger];\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport { HomeOutlined } from '@ant-design/icons';\n\n\nclass ABDNavMenu extends Component {\n    render() {\n        let linkIsland;\n        if (this.props.islandName && this.props.islandName !== '') {\n            linkIsland = <Link to=\"/explore\">Explore {this.props.islandName}</Link>\n        } else {\n            linkIsland = <Link to=\"/explore\">Explore Island</Link>\n        }\n        return (\n            <Menu mode=\"horizontal\" style={{ height: '100%', margin: '16px 24px 16px 0'}}>\n                <Menu.Item key=\"home\" icon={<HomeOutlined />}>\n                    <Link to=\"/\">Home</Link>\n                </Menu.Item>\n                <Menu.Item key=\"explore\">\n                    {linkIsland}\n                </Menu.Item>\n                <Menu.Item key=\"antd\">\n                    <Link to=\"/antd\">Automated Bell Dispenser (ABD)</Link>\n                </Menu.Item>\n\n                <Menu.Item key=\"inventory\">\n                    <Link to=\"/inventory\">Inventory</Link>\n                </Menu.Item>\n\n                <Menu.Item key=\"store\">\n                    <Link to=\"/store\">Store</Link>\n                </Menu.Item>\n            </Menu>\n        );\n    }\n}\nconst mapStateToProps = state => ({\n    islandName: state.user.islandName\n  });\nexport default connect(mapStateToProps)(ABDNavMenu);","import React, { Component } from 'react';\nimport { Layout } from 'antd';\nimport ABDNavMenu from './ABDNavMenu';\n\nconst { Header, Footer, Content } = Layout;\n\nexport class ABDLayout extends Component {\n    static displayName = Layout.name;\n\n    render() {\n        return (\n            <Layout>\n                <Header className=\"header\">\n                    <div className=\"logo\">\n                        <img alt=\"Logo\" src=\"./images/nook_island_logo.png\" />\n                    </div>\n                    <ABDNavMenu />\n                </Header>\n                <Content style={{ padding: '0 50px', minHeight: '50px' }}>\n                    {this.props.children}\n                </Content>\n                <Footer>Copyright 2020</Footer>\n            </Layout>\n        );\n    }\n}","import dayjsGenerateConfig from 'rc-picker/lib/generate/dayjs';\nimport generatePicker from 'antd/lib/date-picker/generatePicker';\nimport 'antd/lib/date-picker/style/index';\n\nconst DatePicker = generatePicker(dayjsGenerateConfig);\n\nexport default DatePicker;","import * as React from 'react';\nimport DatePicker from './DatePicker';\n\nconst TimePicker = React.forwardRef((props, ref) => {\n    return <DatePicker {...props} picker=\"time\" mode={undefined} ref={ref} />;\n});\n\nTimePicker.displayName = 'TimePicker';\n\nexport default TimePicker;","import dayjsGenerateConfig from 'rc-picker/lib/generate/dayjs';\nimport generateCalendar from 'antd/lib/calendar/generateCalendar';\nimport 'antd/lib/calendar/style';\n\nconst Calendar = generateCalendar(dayjsGenerateConfig);\n\nexport default Calendar;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setName, setBirthDate, setIslandName } from '../redux/user/user.action';\n\nimport { Avatar, Input, Form, Button } from 'antd';\nimport { DatePicker } from '../components/antd-pickers';\n\nclass Home extends Component {\n\n  constructor() {\n    super();\n    this.onNameChange = this.onNameChange.bind(this);\n    this.onBirthdateChange = this.onBirthdateChange.bind(this);\n    this.onIslandNameChange = this.onIslandNameChange.bind(this);\n  }\n\n  render () {\n    return (\n      <div>\n        <h1>Hello, Islander!</h1>\n        <p>Welcome to your island.</p>\n        <Avatar src=\"./images/av_timtom.png\" size={100} shape=\"square\" />\n        <p>Hello! We're so excited to have you here! <small>...have you here!</small></p>\n        <p>Let us be the first to congratulate you on your wise decision to sign up for this adventure.</p>\n        <p>Welcome...to the check-in counter for your Deserted Island Getaway Package!</p>\n        \n        <p>Can we get your name and birthday? <small>...birthday?</small></p>\n        <Form.Item label=\"Name\"><Input value={this.props.name} onChange={this.onNameChange} /></Form.Item>\n        <Form.Item label=\"Birthday\"><DatePicker value={this.props.birthDate} onChange={this.onBirthdateChange} /></Form.Item>\n\n        <Avatar src=\"./images/av_tom.png\" shape=\"circle\" size={100} />\n        <p>Welcome to your island! My name is Tom Nook, and I'm the founder and president of Nook Inc. Yes, yes!</p>\n        <p>What should we call your island?</p>\n        <Form.Item label=\"Suggest a name for the island!\"><Input value={this.props.islandName} onChange={this.onIslandNameChange} /></Form.Item>\n\n        <Button type=\"primary\" onClick={this.onRegister}>Register</Button>\n      </div>\n    );\n  }\n  onNameChange(e) {\n    this.props.setName(e.target.value);\n  }\n  onBirthdateChange(value, dateString) {\n    this.props.setBirthDate(value);\n  }\n  onIslandNameChange(e) {\n    this.props.setIslandName(e.target.value);\n  }\n  onRegister() {\n\n  }\n}\nconst mapStateToProps = state => ({\n  name: state.user.name,\n  birthDate: state.user.birthDate,\n  islandName: state.user.islandName\n});\n\nexport default connect(mapStateToProps, {\n  setName,\n  setBirthDate,\n  setIslandName\n})(Home);","export const setName = name => ({\n    type: 'SET_NAME',\n    payload: name\n});\n\nexport const setBirthDate = bdate => ({\n    type: 'SET_BDATE',\n    payload: bdate\n});\nexport const setIslandName = name => ({\n    type: 'SET_ISLAND_NAME',\n    payload: name\n});","import React from 'react';\nimport { Route } from 'react-router';\nimport './App.css';\nimport { ABDLayout } from './components/ABDLayout';\nimport Home from './pages/Home';\n\nimport './App.less';\n\nfunction App() {\n  return (\n    <ABDLayout>\n        <Route exact path='/' component={Home} />\n    </ABDLayout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <BrowserRouter basename={baseUrl}>\n      <App />\n    </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}